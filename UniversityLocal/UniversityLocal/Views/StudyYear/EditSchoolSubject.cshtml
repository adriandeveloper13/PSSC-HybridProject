@model University.Models.StudyYear.SchoolSubject

@{
    ViewBag.Title = "EditSchoolSubject";
}

<h2>EditSchoolSubject</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>SchoolSubjects</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name.Name, new { htmlAttributes = new { @class = "form-control", @id = "school-subject-name-input" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ExamProportion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ExamProportion.FinalProportion, new { htmlAttributes = new { @class = "form-control" , @id =  "school-subject-exam-proportion-input"} })
                @Html.ValidationMessageFor(model => model.ExamProportion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Credits, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Credits.Count, new { htmlAttributes = new { @class = "form-control", @id = "school-subject-credits-input" } })
                @Html.ValidationMessageFor(model => model.Credits, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EvaluationType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EvaluationType, new { htmlAttributes = new { @class = "form-control", @id = "school-subject-evaluation-type-input" } })
                @Html.ValidationMessageFor(model => model.EvaluationType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" value="Save" class="btn btn-default" onclick="schoolSubjectModule.updateSchoolSubjectPost('@ViewBag.SchoolSubjectId')"/>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/schoolSubjectScript")
}
